import { createSlice } from '@reduxjs/toolkit';

export const calculatorSlice = createSlice({
  name: 'calculator',  // Name for the slice, which helps Redux identify it.
  initialState: {      // Initial state for this slice.
    // value1: 0,         // First number input
    // value2: 0,         // Second number input
    result: 0,         // Stores the result of the calculation
  },
  reducers: {          // Define the actions to modify the state.

    setValue1: (state, action) => {  // Action to set value1 from user input
      state.value1 = action.payload; // Each action has a type property and an optional payload
      //  Each function in the reducers field becomes an action creator with the same name.
      //  if you define a reducer setValue1, then Redux Toolkit will create an action setValue1 in calculatorSlice.actions
    },
    setValue2: (state, action) => {  // Action to set value2 from user input
      state.value2 = action.payload;
    },
    addValues: (state) => {          // Action to add value1 and value2
      state.result = state.value1 + state.value2;
    },
    subtractValues: (state) => {     // Action to subtract value2 from value1
      state.result = state.value1 - state.value2;
    },
  },
});

export const { setValue1, setValue2, addValues, subtractValues } = calculatorSlice.actions;
export default calculatorSlice.reducer;
//calculatorSlice.reducer: The reducer function generated by Redux Toolkit that handles all state changes defined in reducers.
//calculatorSlice.actions: An object that contains action creators (setValue1, setValue2, addValues, and subtractValues). 
//Each action creator can be dispatched to change the state managed by calculatorSlice.reducer.